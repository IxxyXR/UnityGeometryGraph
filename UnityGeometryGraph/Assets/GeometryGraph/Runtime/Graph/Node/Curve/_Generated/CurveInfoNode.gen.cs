// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the GeometryGraph Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using GeometryGraph.Runtime.Attributes;
using GeometryGraph.Runtime.Curve;

namespace GeometryGraph.Runtime.Graph {
    [SourceClass("GeometryGraph.Runtime::GeometryGraph.Runtime.Graph::CurveInfoNode")]
    public partial class CurveInfoNode : RuntimeNode {
        public RuntimePort CurvePort { get; }
        public RuntimePort PointsPort { get; }
        public RuntimePort IsClosedPort { get; }

        public CurveInfoNode(string guid) : base(guid) {
            CurvePort = RuntimePort.Create(PortType.Curve, PortDirection.Input, this);
            PointsPort = RuntimePort.Create(PortType.Integer, PortDirection.Output, this);
            IsClosedPort = RuntimePort.Create(PortType.Boolean, PortDirection.Output, this);
        }

        protected override object GetValueForPort(RuntimePort port) {
            if (port == PointsPort) return Curve?.Points ?? 0;
            if (port == IsClosedPort) return Curve?.IsClosed ?? false;
            return null;
        }

        protected override void OnPortValueChanged(Connection connection, RuntimePort port) {
            if (port == PointsPort || port == IsClosedPort) return;
            if (port == CurvePort) {
                Curve = GetValue(connection, (CurveData)null);
                NotifyPortValueChanged(PointsPort);
                NotifyPortValueChanged(IsClosedPort);
            }
        }
    }
}