// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the GeometryGraph Code Generator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using GeometryGraph.Runtime.Attributes;
using JetBrains.Annotations;
using Unity.Mathematics;
using GeometryGraph.Runtime.Serialization;

namespace GeometryGraph.Runtime.Graph {
    [SourceClass("GeometryGraph.Runtime::GeometryGraph.Runtime.Graph::VectorValueNode")]
    public partial class VectorValueNode : RuntimeNode {
        public RuntimePort ValuePort { get; }

        public VectorValueNode(string guid) : base(guid) {
            ValuePort = RuntimePort.Create(PortType.Vector, PortDirection.Output, this);
        }

        public void UpdateValue(float3 newValue) {
            if(math.distancesq(Value, newValue) < Constants.FLOAT_TOLERANCE * Constants.FLOAT_TOLERANCE) return;
            Value = newValue;
            NotifyPortValueChanged(ValuePort);
        }

        protected override object GetValueForPort(RuntimePort port) {
            if (port == ValuePort) return Value;
            return null;
        }

        protected override void OnPortValueChanged(Connection connection, RuntimePort port) {
            if (port == ValuePort) return;
        }

        public override string GetCustomData() {
            return new JArray {
                JsonConvert.SerializeObject(Value, float3Converter.Converter),
            }.ToString(Formatting.None);
        }

        public override void SetCustomData(string data) {
            JArray array = JArray.Parse(data);
            Value = JsonConvert.DeserializeObject<float3>(array.Value<string>(0), float3Converter.Converter);

            NotifyPortValueChanged(ValuePort);
        }
    }
}